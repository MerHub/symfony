{% extends '@Reservation/Default/index.html.twig' %}

{% block moduleReservationLivraison %}

    {# choisir une position sur la map #}


    map.on('click', function(e) {
    if(taxiSelect==false) {
    setInterval(function () {
    if ($("path.leaflet-interactive[stroke-opacity='0.75']").hasClass("dej") == false) {
    $("path.leaflet-interactive[stroke-opacity='0.75']").attr("stroke", "#49BB72")
    $("path.leaflet-interactive[stroke-opacity='0.75']").attr("stroke-width", "6")
    $("path.leaflet-interactive[stroke-opacity='0.75']").addClass("dej")
    }
    }, 500)
    var rien="";
    var v1= iconStartExist();
    var v2= iconEndExist();
    {% if reservation is not defined %}
        var LamMarker = ((v1!= -1 && v2!= -1) || (v1!= -1 && v2== -1)) ? creerIcon(e.latlng.lat, e.latlng.lng,"fin") : creerIcon(e.latlng.lat, e.latlng.lng,"debut");
        ((v1!= -1 && v2!= -1) || (v1!= -1 && v2== -1)) ? $(".infor").hide() : "";
        (theMarker.length >= 2) ? supprimerIcon(iconEndExist()) : rien="";
    {% else %}
        var LamMarker = creerIcon(e.latlng.lat, e.latlng.lng,"debut");
        (theMarker.length >= 1) ? supprimerIcon(iconStartExist()) : rien="";
    {% endif %}

    LamMarker._leaflet_id = i;
    theMarker.push(LamMarker);
    coordonner.push([e.latlng.lat, e.latlng.lng])
    map.addLayer(LamMarker);
    v1= iconStartExist();
    v2= iconEndExist();

    var debut = 1;
    var fin = 1;
    (v1!=-1) ? (directions.setOrigin(L.latLng(coordonner[v1][0], coordonner[v1][1])),debut = coordonner[v1]) : rien="";
    (v2!=-1) ? (directions.setDestination(L.latLng(coordonner[v2][0], coordonner[v2][1])),fin = coordonner[v2]) : rien="";

    (debut != 1 && fin != 1) ? calculDistance(debut[0],debut[1],fin[0],fin[1]) : rien="";
    (fin == 1) ? (directions.setOrigin(L.latLng({{ user.latitude }},{{ user.longitude }})),
    directions.setDestination(L.latLng(debut[0], debut[1])),
    calculDistance({{ user.latitude }},{{ user.longitude }},debut[0],debut[1])) : rien="";

    LamMarker.on('click', function (e) {
    v1= iconStartExist();
    v2= iconEndExist();
    $(".infor").show();
if(v2==-1){
    $("#myInput").trigger("click")
    }else{
    var iconSelect= (theMarker[v1]._leaflet_id == e.target._leaflet_id) ? v1 : v2;
    (theMarker[iconSelect]._popup._content == "end") ? (
    directions.setOrigin(L.latLng({{ user.latitude }},{{ user.longitude }})),
    directions.setDestination(L.latLng(debut[0], debut[1])),
    calculDistance({{ user.latitude }},{{ user.longitude }},debut[0],debut[1])
    ) : {% if reservation is not defined %} (
    $(".infor").show(),
    theMarker[v2].setIcon(L.mapbox.marker.icon({
    'marker-size': 'large',
    'marker-symbol': 'warehouse',
    'marker-color': '#42AA6B'
    })),
    theMarker[v2]._popup._content = "start",
    fin = coordonner[v2],
    directions.setOrigin(L.latLng({{ user.latitude }},{{ user.longitude }})),
    directions.setDestination(L.latLng(fin[0], fin[1])),
    calculDistance({{ user.latitude }},{{ user.longitude }},fin[0],fin[1])

    ){% else %} rien="" {% endif %},
    {% if reservation is not defined %}
        supprimerIcon(iconSelect)
    {% else %}
        $("#myInput").trigger("click")
    {% endif %}
    }
    });

    i++;
    cmpt++;
    if(parseFloat($(".lol").css("margin-left").replace("px",""))<0){
    $("#myInput").trigger("click");
    }
    }else{
    alert("you must cancle");
    }
    });

    {# afficher la liste des chauffeur sur la map #}

    {% for driver in listChauffeur %}

        {% if driver.latitude is not null and driver.latitude is defined %}
            L.marker([{{ driver.latitude }},{{ driver.longitude }}], {
            icon: L.mapbox.marker.icon({
            'marker-size': 'medium',
            'marker-symbol': 'car',
            'marker-color': '#ffcf39'
            })
            }).addTo(map).bindPopup('{{ driver.username }}').on('click', function(e) {
            $("[name ='reservationbundle_reservation[idChauffeur]']").val({{driver.id}});

            var directionChauffeurLayer=0;
            var directionChauffeurRouteControl=0;
            var start=iconStartExist();
            var end= iconEndExist();
            var rien="";
            (start!=-1 && end==-1) ? (
            directionChauffeurLayer = L.mapbox.directions.layer(directionChauffeur).addTo(map),
            directionChauffeurRouteControl = L.mapbox.directions.routesControl('routes', directionChauffeur).addTo(map),
            taxiSelect=true,
            $(".deleteFormReservation").fadeOut(100).queue(function(){$(".contenuReservation").fadeIn();$(this).dequeue()}),
            setInterval(function(){ ($("path.leaflet-interactive[stroke-width='4']").hasClass("dej")==false) ? (
            $("path.leaflet-interactive[stroke-width='4']").attr("stroke","#F1A70E"),
            $("path.leaflet-interactive[stroke-width='4']").attr("stroke-opacity","0.4"),
            $("path.leaflet-interactive[stroke-width='4']").addClass("dej")
            ) : rien=""
            },100),
            directionChauffeur.setOrigin(L.latLng(e.latlng.lat, e.latlng.lng)),
            directionChauffeur.setOrigin(L.latLng(e.latlng.lat, e.latlng.lng)),
            directionChauffeur.setDestination(L.latLng({{ user.latitude }},{{ user.longitude }})),
            idChauffeur={{ driver.id }},
            supprimerIconSupplementaire(),
            updateDirectionChauffeur()
            ) : ((start==-1 && end==-1) ? (map.setView(new L.LatLng(e.latlng.lat, e.latlng.lng), 17)) : (
            taxiSelect=true,
            $(".reservation").fadeOut(100),
            $(".livraison").fadeIn(100),
            $(".deleteLivraison").fadeOut(100),
            $(".contenuLivraison").fadeIn(100),
            $(".livraison").animate({"left":"0%"})
            ));
            });
        {% endif %}
    {% endfor %}

    {# fonction utile pour la manipulation de la map #}

    function iconStartExist() {
    for (j = 0; j < theMarker.length; j++) {
    if (theMarker[j]._popup._content == "start") {
    return j;
    }
    }
    return -1;
    }

    function iconEndExist() {
    for (j = 0; j < theMarker.length; j++) {
    if (theMarker[j]._popup._content == "end") {
    return j;
    }
    }
    return -1;
    }

    function calculDistance(lat1,lon1,lat2,lon2){
    getAdresseDebut(lat1,lon1);
    getAdresseDestination(lat2,lon2);
    updateDirection();

    var southWest = L.latLng(lat1, lon1),
    northEast = L.latLng(lat2, lon2),
    bounds = L.latLngBounds(southWest, northEast);
    map.fitBounds(bounds);

    }




    function supprimerIconSupplementaire(){
    $(".leaflet-marker-icon.leaflet-zoom-animated.leaflet-interactive.leaflet-marker-draggable").css("display", "none");
    }
    function creerIcon(lat,lon,fonction){
    var  icon;
    if(fonction=="fin"){
    icon= new L.marker([lat, lon], {
    icon: L.mapbox.marker.icon({
    'marker-size': 'large',
    'marker-symbol': 'bus',
    'marker-color': '#E91E63'
    })
    }).bindPopup('end');
    }else{
    icon= new L.marker([lat, lon], {
    icon: L.mapbox.marker.icon({
    'marker-size': 'large',
    'marker-symbol': 'warehouse',
    'marker-color': '#42AA6B'
    })
    }).bindPopup('start');
    }

    return icon;
    }

    function supprimerIcon(j){
    map.removeLayer(theMarker[j]);
    var index = theMarker.indexOf(theMarker[j]);
    var indexs = coordonner.indexOf(coordonner[j]);
    theMarker.splice(index, 1);
    coordonner.splice(indexs, 1)
    cmpt--;
    }

    function supprimerTousIcon(){
    var taille=theMarker.length;
    for(j=0;j<taille;j++){
    supprimerIcon(0)
    }
    }
{% endblock %}